{
    "Bootstrap WPI Command":{
        "prefix": "!wpicmd",
        "body": [
            "package frc.robot.commands;",
            "$0",
            "import frc.robot.subsystems.Climber;",
            "import edu.wpi.first.wpilibj2.command.CommandBase;",
            "$0",
            "/** An example command that uses an example subsystem. */",
            "public class ${1:ExampleCommand} extends CommandBase {",
            "    @SuppressWarnings({ \"PMD.UnusedPrivateField\", \"PMD.SingularField\" })",
            "$0",
            "    /**",
            "    * Creates a new ${1:ExampleCommand}.",
            "    *",
            "    * @param subsystem The subsystem used by this command.",
            "    */",
            "    public ${1:ExampleCommand}(${2:Subsystem sys}) {",
            "    }",
            "$0",
            "    // Called when the command is initially scheduled.",
            "    @Override",
            "    public void initialize() {",
            "    }",
            "    // Called every time the scheduler runs while the command is scheduled.",
            "    @Override",
            "    public void execute() {",
            "    }",

            "    // Called once the command ends or is interrupted.",
            "    @Override",
            "    public void end(boolean interrupted) {",
            "    }",
            "$0",
            "    // Returns true when the command should end.",
            "    @Override",
            "    public boolean isFinished() {",
            "        return true;",
            "    }",
            "}",
        ],
        "description": "Initialize Command"
    },
    "Bootstrap WPI Subsystem":{
        "prefix": "!wpisys",
        "body": [
            "package frc.robot.subsystems;",
            "$0",
            "public class ${1:ExampleSubsystem} extends SubsystemBase{",
            "$0",
            "    public ${1:ExampleSubsystem}(){",
            "$0${2:}",
            "    }",
            "$0",
            "    /**",
            "     * This method is called once per scheduler run and is used to update smart dashboard data.",
            "     */",
            "    public void periodic() {",
            "    }",
            "$0",
            "    @Override",
            "    public void simulationPeriodic() {",
            "    }",
            "",
            "}"]
    }
}